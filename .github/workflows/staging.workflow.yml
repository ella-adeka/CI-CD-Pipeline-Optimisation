# checkout jenkins

name: Test and Deploy Staging
on:
  workflow_dispatch:
    branches:
      - main

permissions:
  id-token: write
  contents: read
  pull-requests: write

env:
  TF_LOG: INFO  # verbosity settting for Terraform logs
  AWS_REGION: ${{ AWS_REGION }}
        
jobs:
  test-staging: 
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r ./my_app/requirements.txt
          playwright install
          playwright install-deps
      - name: Test with pytest
        run: pytest ./tests/e2e/test_example.py
    
  deploy-to-staging: 
    # name: "Deploy to Staging"
    runs-on: ubuntu-latest
    permissions:
      deployments: write
      contents: write
      statuses: write
      actions: write
      checks: read
    defaults:
      run:
        shell: bash
        working-directory: terraform/environments/staging
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          path: main

      - name: Configure AWS credentials from AWS account
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE }}
          aws-region: ${{ secrets.AWS_REGION }}
          role-session-name: Github-OIDC-TERRAFORM

      - name: Set up Terraform (staging)
        uses: hashicorp/setup-terraform@v3  # This step sets up Terraform
        with:
          terraform_version: 1.3.0
      
      - name: Setup Terraform File Permissions
        run: find /tmp -name "terraform" -type f -exec chmod 755 {} +

      - name: Terraform Init (staging)
        id: init
        env: 
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_STAG_BUCKET_NAME: ${{ secrets.AWS_STAG_BUCKET_NAME }}
        run:  |
          terraform init -backend-config="bucket=${AWS_STAG_BUCKET_NAME}" -backend-config="key=${AWS_STAG_BUCKET_KEY_NAME}" -backend-config="region=${AWS_REGION}"
        # run:  terraform init -reconfigure -backend-config="access_key=${{env.AWS_ACCESS_KEY_ID}}" -backend-config="secret_key=${{env.AWS_SECRET_ACCESS_KEY}}" -backend-config="region=eu-west-2"
      
      # - name: Import bucket
      #   run: terraform import 'aws_s3_bucket.stag-backend-bucket' cicdpo-stag-tf-state-bucket

      - name: Validate Configuration
        run: terraform validate 

      - name: View resources to be created
        run: terraform plan

      - name: Terraform Action (staging)
        run:  terraform apply -auto-approve -input=false
